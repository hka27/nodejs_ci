# image: docker:latest

# services: 
#   - docker:dind

# before_script:
#   - docker-compose version

# stages:
#   - build
#   - test
#   - teardown
#   - deploy


# run test:
#   stage: test
#   image: $CI_REGISTRY_IMAGE
#   # rules:
#   #   - if: $CI_PIPELINE_SOURCE != 'schedule'
#   script:
#     - npm run test
image: registry.gitlab.com/hka27/repo-mirror/docker/compose:latest
services: 
  - registry.gitlab.com/hka27/repo-mirror/docker:dind

build image:
  stage: build
  script:
    # - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
    - docker build -t $CI_REGISTRY_IMAGE .
    # - docker push $CI_REGISTRY_IMAGE
    # - docker-compose --env-file=./config/.env.dev up -d
  only:
    - dev

test image:
  stage: test
  script: 
    - docker-compose --env-file=./config/.env.dev down
    # - docker stack deploy --compose-file app_container
    - docker-compose --env-file=./config/.env.dev up -d
  only:
    - dev

teardown image:
  stage: test
  needs: 
    - "test image"
  script:
    - docker-compose --env-file=./config/.env.dev down
  only:
    - dev

push image:
  stage: deploy
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE
  only:
    - dev

# pull image:
#   stage: deploy
#   needs: ["push image"]
#   script:  
#     - ssh -i ./config/id_rsa 35.200.243.64
deploy image:
  image: alpine:latest
  stage: deploy
  needs: 
    - "push image"
  before_script:
    # - apk add openssh-client # Add SSH client for alpine 
    # - eval $(ssh-agent -s) # Run the SSH client 
    # - mkdir -p ~/.ssh
    # - echo "$ID_RSA" > ~/.ssh/id_rsa 
    # - chmod 400 ~/.ssh/id_rsa
    # # - ssh-add ~/.ssh/id_rsa 

  script:
    - |
      ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no deployer@$SERVER_IP "
        set -x -e
        # Commands to run in bash
        cd ~/app
        docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        docker pull $CI_REGISTRY_IMAGE
        docker-compose --env-file=./config/.env.dev down
        docker-compose --env-file=./config/.env.dev up -d
      "
  only:
    - dev

# test:
#   stage: test
#   script:
#     - docker-compose --env-file=./config/.env.stage up
#   only:
#     - dev

# teardown:
#   stage: test
#   script:
#     - docker-compose --env-file=./config/.env.stage down
#   only:
#     - dev
    
# deploy:
#   stage: deploy
#   script:
#     - echo "This job tests something, but takes more time than test-job1."
#     - echo "After the echo commands complete, it runs the sleep command for 20 seconds"
#     - echo "which simulates a test that runs 20 seconds longer than test-job1"
#     - sleep 20
#   only:
#     - dev

